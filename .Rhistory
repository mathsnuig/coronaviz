geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 6, family = "Inter-Bold") +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
?geom_text
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = Date - min(Date),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 6, nudge_y = 2) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = Date - min(Date),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 6, nudge_y = 20) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = Date - min(Date),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 2) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = Date - min(Date),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
library(gganimate)
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = Date - min(Date),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_time(Days)
g
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = Date - min(Date),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_time(as.numeric(Days))
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
g
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_time(Days)
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_time(Days)
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_reveal(Days)
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% mutate(Days = Days + 20),
aes(label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_reveal(Days)
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% mutate(Days = Days + 20),
aes(x=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_reveal(Days)
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% mutate(Days = Days + 20),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_reveal(Days)
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + transition_reveal(Days)
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% mutate(Days = Days + 20),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
View(dat)
dat1 <- dat %>%
filter(country=="ireland" | country == "united states of america") %>%
mutate(pop = pop/1e6)
# date on x axis
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
mutate(New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Date, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() + labs(y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "7 days")
ggplotly(g, tooltip = c("Country", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 20),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
g
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
g
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") +
lims(x=c(min(Days),max(Days)+20))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) + geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") + lims(x=c(min(dat1$Days),max(dat1$Days)+20))
g
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") +
scale_x_continuous(limits = c(min(Days), max(Days)))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") +
scale_x_continuous(limits = c(min(dat1$Days), max(dat1$Days)))
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right")) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
g = dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = round(rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right"),0)) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
ggplotly(g, tooltip = c("Country", "Days", "Date", "New_cases_per_million", "Actual_new_cases"))
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = round(rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right"),0)) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = round(rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right"),0)) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none")
runApp('covid/coronaviz')
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = round(rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right"),0)) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") +
scale_y_continuous(trans = "log10")
# day 0 is first 10 case day
dat1 %>%
group_by(country, date) %>%
summarise(Actual_new_cases = sum(ncase), Date = min(date), Country = country[1], Pop = mean(pop)) %>%
na.omit() %>%
filter(Actual_new_cases > 10) %>%
mutate(Days = as.numeric(Date - min(Date)),
New_cases_per_million = round(Actual_new_cases / Pop, 0),
roll = round(rollmean(New_cases_per_million, k=7, na.pad = TRUE, align = "right"),0)) %>%
ggplot(aes(x = Days, y = New_cases_per_million, color = country, fill = country, label = Date,
label1 = Country, label2 = New_cases_per_million , label3 = Actual_new_cases)) +
geom_line(aes(y=roll)) +
geom_point() +
geom_text(data = . %>% filter(Days == max(Days)) %>% mutate(Days = Days + 2),
aes(y=roll,label = country), hjust = 0, size = 4) +
labs(x = "Days since 10 daily cases", y = "Cases (per million of population)") +
theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") +
scale_y_continuous(trans = "log10")
?checkboxInput
?scale_y_continuous
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
?anim_save
runApp('covid/coronaviz')
library(shinyMobile)
?f7checkBox
runApp('covid/coronaviz/mobileapp.R')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
