year = as.factor(year(Date))) %>%
group_by(covid) %>%
mutate(Total_Other_ACS = cumsum(count),
day = ifelse(day < 60, day, day-60)) %>%
ggplot(aes(x=day, y=Total_Other_ACS, fill = covid)) + geom_col(position = "dodge") +
labs(x="Day from start of January (blue) and March (red)", y = "Cumulative OACS") + theme_bw()
# daily nb model for overdispersion
model <- glmer.nb(count ~ covid + (1|hospital), data = oacs)
tab_model(model)
df <- data.frame(coef(summary(model)))
df$rr <- round(exp(df$Estimate),2)
df$cil <- round(exp(df$Estimate - 1.96*df$Std..Error),2)
df$ciu <- round(exp(df$Estimate + 1.96*df$Std..Error),2)
df$p <- round(df$Pr...z..,3)
View(df)
100*(1-df$rr[2])
df$rr[2]
aacs <- dat %>%
filter(covid != "previous_year") %>%
select(-c(year)) %>%
rbind(oacs)
aacs %>% group_by(hospital, covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs$covid <- factor(aacs$covid, levels = levels(aacs$covid)[c(2,1,3)])
aacs %>% group_by(hospital, covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>% group_by(covid) %>%
summarise(days = n()/5, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS by covid-19 period")
aacs %>% group_by(covid) %>%
summarise(days = n()/10, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS by covid-19 period")
aacs %>% group_by(hospital, covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>% group_by(hospital, covid) %>%
summarise(days = n()/2, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid, hospital) %>%
mutate(day = yday(Date),
Total_All_ACS = cumsum(count),
day = ifelse(day < 60, day, day-60)) %>%
ggplot(aes(x=day, y=Total_All_ACS, fill = covid)) + geom_col(position = "dodge") + facet_wrap(~hospital, nrow=1) +
labs(x="Day from start of January (blue) and March (red)", y = "Cumulative all ACS") + theme_bw()
aacs <- dat %>%
filter(covid != "2019-Reference") %>%
select(-c(year)) %>%
rbind(oacs)
aacs$covid
aacs %>% group_by(hospital, covid) %>%
summarise(days = n()/2, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>% group_by(covid) %>%
summarise(days = n()/10, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS by covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid, hospital) %>%
mutate(day = yday(Date),
Total_All_ACS = cumsum(count),
day = ifelse(day < 60, day, day-60)) %>%
ggplot(aes(x=day, y=Total_All_ACS, fill = covid)) + geom_col(position = "dodge") + facet_wrap(~hospital, nrow=1) +
labs(x="Day from start of January (blue) and March (red)", y = "Cumulative all ACS") + theme_bw()
# daily nb model for overdispersion
model <- glmer.nb(count ~ covid + (1|hospital), data = aacs)
tab_model(model)
df <- data.frame(coef(summary(model)))
df$rr <- round(exp(df$Estimate),2)
df$cil <- round(exp(df$Estimate - 1.96*df$Std..Error),2)
df$ciu <- round(exp(df$Estimate + 1.96*df$Std..Error),2)
df$p <- round(df$Pr...z..,3)
100*(1-df$rr[2])
corona <- read.csv("/Users/andrew/covid/coronaviz/data/corona_ireland.csv") %>%
mutate(Date = as.Date(date, format = "%d/%m/%Y")) %>%
filter(area !="north") %>%
group_by(Date) %>%
summarise(ncases = sum(ncase))
corona <- read.csv("/Users/andrew/covid/coronaviz/data/corona_ireland.csv") %>%
mutate(Date = as.Date(date, format = "%d/%m/%Y")) %>%
filter(area !="north") %>%
group_by(Date) %>%
summarise(ncases = sum(ncase),
ndeaths = sum(ndeath))
View(corona)
stats <- read.csv("/Users/andrew/covid/coronaviz/data/corona_stats.csv") %>%
mutate(Date = as.Date(date, format = "%d/%m/%Y"),
Cases = c(NA,diff(Cases)),
Hospitalised = c(NA,diff(Hospitalised)),
ICU = c(NA,diff(ICU)),
Deaths = c(NA,diff(Deaths)))
stats$Deaths[stats$Deaths<0]=0
stats$Hospitalised[stats$Hospitalised<0]=0
stats$ICU[stats$ICU<0]=0
library(scales)
corona %>%
ggplot(aes(x=Date, y=ncases)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed cases") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
corona %>%
ggplot(aes(x=Date, y=ndeaths)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed deaths") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
stats %>%
ggplot(aes(x=Date, y=Deaths)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed deaths") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
stats %>%
ggplot(aes(x=Date, y=Hospitalised)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed hospitalisations") + theme_bw() +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
stats %>%
ggplot(aes(x=Date, y=ICU)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed ICU admissions") + theme_bw() +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
corona <- read.csv("/Users/andrew/covid/coronaviz/data/corona_ireland.csv") %>%
mutate(Date = as.Date(date, format = "%d/%m/%Y")) %>%
filter(area !="north") %>%
group_by(Date) %>%
summarise(ncases = sum(ncase),
ndeaths = sum(ndeath))
stats <- read.csv("/Users/andrew/covid/coronaviz/data/corona_stats.csv") %>%
mutate(Date = as.Date(date, format = "%d/%m/%Y"),
Cases = c(NA,diff(Cases)),
Hospitalised = c(NA,diff(Hospitalised)),
ICU = c(NA,diff(ICU)),
Deaths = c(NA,diff(Deaths)))
stats$Deaths[stats$Deaths<0]=0
stats$Hospitalised[stats$Hospitalised<0]=0
stats$ICU[stats$ICU<0]=0
library(scales)
corona %>%
ggplot(aes(x=Date, y=ncases)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed cases") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
corona %>%
ggplot(aes(x=Date, y=ndeaths)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed deaths") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
stats %>%
ggplot(aes(x=Date, y=Deaths)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed deaths") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
stats %>%
ggplot(aes(x=Date, y=Hospitalised)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed hospitalisations") + theme_bw() +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
stats %>%
ggplot(aes(x=Date, y=ICU)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed ICU admissions") + theme_bw() +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
stats$Deaths
corona$ndeaths
View(corona)
View(stats)
dailydeaths <- data.frame(Date = as.Date(c("11/03/2020","14/03/2020"), format = "%d/%m/%Y"),
Deaths = c(1,1))
merge(stats,dailydeaths)
merge(stats,dailydeaths, by = "Date")
dailydeaths <- data.frame(date = as.Date(c("11/03/2020","14/03/2020"), format = "%d/%m/%Y"),
Cases = NA, Hospitalised = NA, ICU = NA,
Deaths = c(1,1),
Date = as.Date(c("11/03/2020","14/03/2020"), format = "%d/%m/%Y"))
View(dailydeaths)
stats <- stats %>% rbind(dailydeaths)
View(stats)
stats %>%
ggplot(aes(x=Date, y=Deaths)) + geom_col(fill = "darkgreen") +
geom_smooth(se=FALSE, color = "lightgreen") +
labs(y="Daily confirmed deaths") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("29/02/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid, hospital) %>%
summarise(days = n()/2, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid, hospital) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(hospital,covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n()/5, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS by covid-19 period")
aacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS by covid-19 period")
6/8
oacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 4: Mean and standard deviation of daily OACS by covid-19 period")
oacs %>% group_by(hospital, covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 3: Mean and standard deviation of daily OACS by hospital and covid-19 period")
oacs %>% group_by(hospital, covid) %>%
summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 3: Mean and standard deviation of daily OACS by hospital and covid-19 period")
110/59
oacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 4: Mean and standard deviation of daily OACS by covid-19 period")
dat %>% group_by(hospital, covid) %>% summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 1. Mean and standard deviation of daily STEMIs by hospital and covid-19 period")
dat %>%
group_by(Date) %>%
summarise(count = sum(count),covid=covid[1]) %>%
group_by(covid) %>% summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 2. Mean and standard deviation of daily STEMIs across covid-19 periods")
dat %>% group_by(hospital, covid) %>% summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 1. Mean and standard deviation of daily STEMIs by hospital and covid-19 period")
oacs %>% group_by(hospital, covid) %>%
summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 3: Mean and standard deviation of daily OACS by hospital and covid-19 period")
oacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 4: Mean and standard deviation of daily OACS by covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(hospital,covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS by covid-19 period")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
library(sjPlot)
library(lme4)
library(knitr)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
library(sjPlot)
library(lme4)
library(knitr)
dat <- read.csv("stemi_all.csv") %>%
mutate(Date = as.Date(Date, format = "%d/%m/%Y")) %>%
gather(hospital, count, -Date) %>%
mutate(day = yday(Date),
year = as.factor(year(Date))) %>%
mutate(covid = as.factor(ifelse(year==2019,"2019-Reference",ifelse(day<=59,"2020-PreCovid","2020-Covid"))),
hospital = case_when(hospital == "James" ~ "A",
hospital == "Galway" ~ "B",
hospital == "Limerick" ~ "C",
hospital == "Waterford" ~ "D",
hospital == "Mater" ~ "E"))
dat$covid <- factor(dat$covid, levels = levels(dat$covid)[c(1,3,2)])
dat %>%
group_by(hospital, covid) %>%
summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 1. Mean and standard deviation of daily STEMIs by hospital and covid-19 period")
dat %>%
group_by(covid) %>% summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 2. Mean and standard deviation of daily STEMIs to all hospitals combined by covid-19 periods")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
library(sjPlot)
library(lme4)
library(knitr)
dat <- read.csv("stemi_all.csv") %>%
mutate(Date = as.Date(Date, format = "%d/%m/%Y")) %>%
gather(hospital, count, -Date) %>%
mutate(day = yday(Date),
year = as.factor(year(Date))) %>%
mutate(covid = as.factor(ifelse(year==2019,"2019-Reference",ifelse(day<=59,"2020-PreCovid","2020-Covid"))),
hospital = case_when(hospital == "James" ~ "A",
hospital == "Galway" ~ "B",
hospital == "Limerick" ~ "C",
hospital == "Waterford" ~ "D",
hospital == "Mater" ~ "E"))
dat$covid <- factor(dat$covid, levels = levels(dat$covid)[c(1,3,2)])
dat %>%
group_by(hospital, covid) %>%
summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 1. Mean and standard deviation of daily STEMIs by hospital and covid-19 period")
dat %>%
group_by(Date) %>%
summarise(count = sum(count),covid=covid[1]) %>%
group_by(covid) %>% summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 2. Mean and standard deviation of daily STEMIs to all hospitals combined by covid-19 periods")
dat %>% filter(day > 59) %>%
group_by(covid, hospital) %>%
mutate(Total_STEMI = cumsum(count), day = day-59) %>%
ggplot(aes(x=day, y=Total_STEMI, fill = covid)) + geom_col(position = "dodge") +
facet_wrap(~hospital, nrow=1) + labs(x="Days since March 1st", y = "Cumulative STEMIs") + theme_bw()
dat %>%
filter(day > 59) %>%
group_by(Date) %>%
summarise(count = sum(count),covid=covid[1]) %>%
mutate(day = yday(Date),
year = as.factor(year(Date))) %>%
group_by(covid) %>%
mutate(Total_STEMI = cumsum(count), day = day-59) %>%
ggplot(aes(x=day, y=Total_STEMI, fill = covid)) + geom_col(position = "dodge") +
labs(x="Days since March 1st", y = "Cumulative STEMIs") + theme_bw()
# daily nb model for overdispersion
model <- glmer.nb(count ~ covid + (1|hospital), data = dat)
tab_model(model)
dat$covid <- factor(dat$covid, levels = levels(dat$covid)[c(2,1,3)])
model <- glmer.nb(count ~ covid + (1|hospital), data = dat)
tab_model(model)
oacs <- read.csv("other_acs.csv") %>%
mutate(Date = as.Date(Date, format = "%d/%m/%Y")) %>%
gather(hospital, count, -Date) %>%
mutate(day = yday(Date),
covid = as.factor(ifelse(day<=59,"2020-PreCovid","2020-Covid")),
hospital = case_when(hospital == "James" ~ "A",
hospital == "Galway" ~ "B",
hospital == "Limerick" ~ "C",
hospital == "Waterford" ~ "D",
hospital == "Mater" ~ "E"))
oacs$covid <- factor(oacs$covid, levels = levels(oacs$covid)[c(2,1)])
oacs %>% group_by(hospital, covid) %>%
summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 3: Mean and standard deviation of daily OACS by hospital and covid-19 period")
oacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 4: Mean and standard deviation of daily OACS to all hospitals combined by covid-19 periods")
oacs %>%
group_by(covid, hospital) %>%
mutate(Total_Other_ACS = cumsum(count),
day = ifelse(day < 60, day, day-60)) %>%
ggplot(aes(x=day, y=Total_Other_ACS, fill = covid)) + geom_col(position = "dodge") + facet_wrap(~hospital, nrow=1) +
labs(x="Day from start of January (red) and March (blue)", y = "Cumulative Other ACS") + theme_bw()
oacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
mutate(day = yday(Date),
year = as.factor(year(Date))) %>%
group_by(covid) %>%
mutate(Total_Other_ACS = cumsum(count),
day = ifelse(day < 60, day, day-60)) %>%
ggplot(aes(x=day, y=Total_Other_ACS, fill = covid)) + geom_col(position = "dodge") +
labs(x="Day from start of January (red) and March (blue)", y = "Cumulative OACS") + theme_bw()
# daily nb model for overdispersion
model <- glmer.nb(count ~ covid + (1|hospital), data = oacs)
tab_model(model)
df <- data.frame(coef(summary(model)))
df$rr <- round(exp(df$Estimate),2)
df$cil <- round(exp(df$Estimate - 1.96*df$Std..Error),2)
df$ciu <- round(exp(df$Estimate + 1.96*df$Std..Error),2)
df$p <- round(df$Pr...z..,3)
aacs <- dat %>%
filter(covid != "2019-Reference") %>%
select(-c(year)) %>%
rbind(oacs)
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(hospital,covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS to all hospitals combined by covid-19 periods")
oacs %>%
group_by(covid) %>%
summarise(days = n(), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 4: Mean and standard deviation of daily OACS admissions per hospital by covid-19 periods")
dat %>%
group_by(covid) %>% summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 2. Mean and standard deviation of daily STEMI admissions per hospital by covid-19 periods")
dat %>%
group_by(covid) %>% summarise(days = n()/5, hospitals = 5, total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 2. Mean and standard deviation of daily STEMI admissions per hospital by covid-19 periods")
oacs %>%
group_by(covid) %>%
summarise(days = n()/5, hospitals = 5, mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 4: Mean and standard deviation of daily OACS admissions per hospital by covid-19 periods")
oacs %>%
group_by(covid) %>%
summarise(days = n()/5, hospitals = 5, total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 4: Mean and standard deviation of daily OACS admissions per hospital by covid-19 periods")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(hospital,covid) %>%
summarise(days = n()/5, hospitals = 5, total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(hospital,covid) %>%
summarise(days = n(), hospitals = 5, total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(hospital,covid) %>%
summarise(days = n(), total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 5: Mean and standard deviation of daily all ACS by hospital and covid-19 period")
aacs %>%
group_by(Date,hospital) %>%
summarise(count = sum(count), covid = covid[1]) %>%
group_by(covid) %>%
summarise(days = n()/5, hospitals = 5, total = sum(count), mean_daily = round(mean(count),2), sd_daily = round(sd(count),2)) %>%
kable(caption = "Table 6: Mean and standard deviation of daily all ACS admissions per hospital by covid-19 periods")
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
