county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498),
province = case_when(county=="Carlow"|county=="Dublin"|
county=="Kildare"|county=="Kilkenny"|
county=="Laois"|county=="Longford"|
county=="Louth"|county=="Meath"|
county=="Offaly"|county=="Westmeath"|
county=="Wexford"|county=="Wicklow" ~ "Leinster",
county=="Clare"|county=="Cork"|
county=="Kerry"|county=="Limerick"|
county=="Tipperary"|county=="Waterford" ~ "Munster",
county=="Galway"|county=="Leitrim"|
county=="Mayo"|county=="Roscommon"|
county=="Sligo" ~ "Connacht",
county=="Donegal"|county=="Cavan"|
county=="Monaghan" ~ "Ulster (ROI)"))
library(nlme)
dat <- dat %>%
mutate(day = as.numeric(date-min(date))) %>%
group_by(county) %>%
mutate(ncases = 100000*c(NA,diff(ncases))/pop)%>%
select(day, date, county, ncases) %>%
na.omit()
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(leaflet)
library(DT)
rm(list=ls())
dat <- read.csv("data/corona_county.csv") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y"),
ncases = as.character(ncase),
ncases = ifelse(ncases == "< = 5","5",ncases),
ncases = as.numeric(ncases),
pop = case_when(county == "Carlow" ~ 24272,
county == "Cavan" ~ 76176,
county == "Clare" ~ 118817,
county == "Donegal" ~159192,
county == "Kildare" ~ 222504,
county == "Kilkenny" ~ 99232,
county == "Laois" ~ 84697,
county == "Leitrim" ~32044,
county == "Longford" ~ 40873,
county == "Louth" ~ 128884,
county == "Mayo" ~ 130507,
county == "Meath" ~ 195044,
county == "Monaghan" ~61386,
county == "Offaly" ~ 77961,
county == "Roscommon" ~ 64544,
county == "Sligo" ~ 65535,
county == "Tipperary" ~ 159553,
county == "Wexford" ~ 149722,
county == "Kerry" ~ 147707,
county == "Waterford" ~ 116176,
county == "Westmeath" ~ 88770,
county == "Wicklow" ~ 142425,
county == "Galway" ~ 258058,
county == "Limerick" ~ 194899,
county == "Cork" ~ 542868,
county == "Dublin" ~ 1347359),
long = case_when(county == "Carlow" ~ -6.9261098,
county == "Cavan" ~ -7.3605599,
county == "Clare" ~ -8.9811,
county == "Donegal" ~ -8.1041,
county == "Kildare" ~ -6.9144402,
county == "Kilkenny" ~ -7.2448,
county == "Laois" ~ -7.3323,
county == "Leitrim" ~ -8.0020,
county == "Longford" ~ -7.7933,
county == "Louth" ~ -6.4889,
county == "Mayo" ~ -9.4289,
county == "Meath" ~ -6.6564,
county == "Monaghan" ~ -6.9683,
county == "Offaly" ~ -7.7122,
county == "Roscommon" ~ -8.1891,
county == "Sligo" ~ -8.4761,
county == "Tipperary" ~ -8.1619,
county == "Wexford" ~ -6.4633,
county == "Kerry" ~ -9.5669,
county == "Waterford" ~ -7.1101,
county == "Westmeath" ~ -7.4653,
county == "Wicklow" ~ -6.0446,
county == "Galway" ~ -9.0568,
county == "Limerick" ~ -8.6267,
county == "Cork" ~ -8.4756,
county == "Dublin" ~ -6.2603),
lat = case_when(county == "Carlow" ~ 52.8408318,
county == "Cavan" ~ 53.9908295,
county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498),
province = case_when(county=="Carlow"|county=="Dublin"|
county=="Kildare"|county=="Kilkenny"|
county=="Laois"|county=="Longford"|
county=="Louth"|county=="Meath"|
county=="Offaly"|county=="Westmeath"|
county=="Wexford"|county=="Wicklow" ~ "Leinster",
county=="Clare"|county=="Cork"|
county=="Kerry"|county=="Limerick"|
county=="Tipperary"|county=="Waterford" ~ "Munster",
county=="Galway"|county=="Leitrim"|
county=="Mayo"|county=="Roscommon"|
county=="Sligo" ~ "Connacht",
county=="Donegal"|county=="Cavan"|
county=="Monaghan" ~ "Ulster (ROI)"))
library(scales)
library(lubridate)
dat %>% mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(county) %>%
mutate(New_cases = 100000*c(NA,diff(ncases))/pop)%>%
filter(county != "Dublin") %>%
ggplot(aes(x=date,y=New_cases,color=county,group=county)) +
geom_smooth(se=FALSE) + theme_bw() + labs(y="Actual new cases (not scaled)")+
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_y_continuous(limit=c(0,NA),oob=squish) +
scale_x_date(date_breaks = "3 days")
dat %>% mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(county) %>%
mutate(New_cases = c(NA,diff(ncases)),
week = week(date)) %>%
group_by(week, county) %>%
summarise(average = mean(New_cases, na.rm = TRUE))
runApp('covid/coronaviz/mobileapp.R')
library(survey)
?rake
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
mean()
mean
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(rgdal)
library(broom)
library(gganimate)
library(gapminder)
library(gifski)
library(png)
library(av)
library(purrr)
library(magick)
library(animation)
library(cowplot)
library(magrittr)
library(here)
library(data.table)
library(lubridate)
library(corrplot)
library(ggpubr)
library(survey)
library(reshape2)
co<- read_excel("data/contacttracingsurveydata.xlsx", sheet = "healthstudy")
#make dataframe of covid data
dataC = as.data.frame(co)
#get rid of "NA" genders
dataC2 <- subset(dataC, sGenBin!="NA")
dummy_survey_unweighted <- svydesign(ids = ~1, data = dataC2, weights = NULL)
gender_dist <- tibble(sGenBin = c("1", "2"), Freq = nrow(dataC2)*c(0.5, 0.5))
dummy_gender_rake <- rake(design = dummy_survey_unweighted,
sample.margins = list(~sGenBin),
population.margins = list(gender_dist))
b1<- svymean(~sInstallHSEapp2, dummy_survey_unweighted, na.rm = TRUE)
b2<- svymean(~sInstallHSEapp2, dummy_gender_rake, na.rm = TRUE)
# include education
educ_dist <- tibble(sEducSimple = c("primary/none", "secondary", "tertiary", "undisclosed"), Freq = nrow(dataC2)*c(0.05, 0.52, 0.42, 0.01))
# rake with gender and education together
dummy_rake <- rake(design = dummy_survey_unweighted,
sample.margins = list(~sGenBin, ~sEducSimple),
population.margins = list(gender_dist, educ_dist))
b4<- svymean(~sInstallHSEapp2, dummy_rake, na.rm = TRUE)
b4
# prop.test(x = round(c(b1[1]*8050,b2[1]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[2]*8050,b2[2]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[3]*8050,b2[3]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[4]*8050,b2[4]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[5]*8050,b2[5]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[6]*8050,b2[6]*8050)), n = c(8050,8050))
#
# prop.test(x = round(c(b1[1]*8050,b4[1]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[2]*8050,b4[2]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[3]*8050,b4[3]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[4]*8050,b4[4]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[5]*8050,b4[5]*8050)), n = c(8050,8050))
# prop.test(x = round(c(b1[6]*8050,b4[6]*8050)), n = c(8050,8050))
dataC2 <- dataC2 %>%
filter(sInstallHSEapp2 != "NA") %>%
mutate(Age.Range = case_when(sAge < 30 ~ "18-29 yrs",
30 <= sAge & sAge < 42 ~ "30-41 yrs",
42 <= sAge & sAge < 54 ~ "42-53 yrs",
54 <= sAge & sAge < 65 ~ "54-65 yrs",
sAge >= 65 ~ "66+ yrs"))
dummy_survey_unweighted <- svydesign(ids = ~1, data = dataC2, weights = NULL)
dummy_rake <- rake(design = dummy_survey_unweighted,
sample.margins = list(~sGenBin, ~sEducSimple),
population.margins = list(gender_dist, educ_dist))
# t1 = svytable(~sGender + sInstallHSEapp2, dummy_rake, round = TRUE)
# t2 = svytable(~sEducSimple + sInstallHSEapp2, dummy_rake, round = TRUE)
# t3 = svytable(~sHealth + sInstallHSEapp2, dummy_rake, round = TRUE)
# t4 = svytable(~Age.Range + sInstallHSEapp2, dummy_rake, round = TRUE)
#
#
# round(prop.table(t1, margin = 1)*100)
# round(prop.table(t2, margin = 1)*100)
# round(prop.table(t3, margin = 1)*100)
# round(prop.table(t4, margin = 1)*100)
#
# addmargins(t1)
# addmargins(t2)
# addmargins(t3)
# addmargins(t4)
#
# # to make the table without copy and paste, knit this as a word document
# library(knitr)
# kable(addmargins(t1))
# kable(addmargins(t2))
# kable(addmargins(t3))
# kable(addmargins(t4))
#
#
# kable(round(prop.table(t1, margin = 1)*100))
# kable(round(prop.table(t2, margin = 1)*100))
# kable(round(prop.table(t3, margin = 1)*100))
# kable(round(prop.table(t4, margin = 1)*100))
# table 1 cheats
library(gtsummary)
dataC2 %>%
mutate(Gender = sGender, Education = sEducSimple,
COVID19.related.worry = sCOVIDworry, Self.reported.health = sHealth,
Age.Range = case_when(sAge < 30 ~ "18-29 yrs",
30 <= sAge & sAge < 42 ~ "30-41 yrs",
42 <= sAge & sAge < 54 ~ "42-53 yrs",
54 <= sAge & sAge < 65 ~ "54-65 yrs",
sAge >= 65 ~ "66+ yrs")) %>%
select(Gender, Education, Age.Range, sInstallHSEapp2, COVID19.related.worry, Self.reported.health) %>%
tbl_summary(by = sInstallHSEapp2) %>%
add_overall()
b4
svychisq(~sGender + sInstallHSEapp2, dummy_rake)
svychisq(~sEducSimple + sInstallHSEapp2, dummy_rake)
svychisq(~sHealth + sInstallHSEapp2, dummy_rake)
svychisq(~Age.Range + sInstallHSEapp2, dummy_rake)
?survey.adjust.domain.lonely
dataC2 %>%
mutate(Gender = sGender, Education = sEducSimple,
COVID19.related.worry = sCOVIDworry, Self.reported.health = sHealth,
Age.Range = case_when(sAge < 30 ~ "18-29 yrs",
30 <= sAge & sAge < 42 ~ "30-41 yrs",
42 <= sAge & sAge < 54 ~ "42-53 yrs",
54 <= sAge & sAge < 65 ~ "54-65 yrs",
sAge >= 65 ~ "66+ yrs")) %>%
select(Gender, Education, Age.Range, sInstallHSEapp2, COVID19.related.worry, Self.reported.health) %>%
tbl_summary() %>%
add_overall()
dataC2 %>%
mutate(Gender = sGender, Education = sEducSimple,
COVID19.related.worry = sCOVIDworry, Self.reported.health = sHealth,
Age.Range = case_when(sAge < 30 ~ "18-29 yrs",
30 <= sAge & sAge < 42 ~ "30-41 yrs",
42 <= sAge & sAge < 54 ~ "42-53 yrs",
54 <= sAge & sAge < 65 ~ "54-65 yrs",
sAge >= 65 ~ "66+ yrs")) %>%
select(Gender, Education, Age.Range, sInstallHSEapp2, COVID19.related.worry, Self.reported.health) %>%
tbl_summary()
citation()
View(dummy_rake)
svychisq(~sCOVIDworry + sInstallHSEapp2, dummy_rake)
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
# Website and filename for European Centre for Disease Prevention and Control Covid-19 data
todaysdate = format(as.Date(Sys.time()) - 1, "%Y-%m-%d") # NZ is always ahead!
ecdpcurl = paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-", todaysdate, ".xlsx", sep = "")
ecdpcfn = rev(strsplit(ecdpcurl, "/")[[1]])[1]
# Download the dataset from the website to a local temporary file
GET(ecdpcurl, authenticate(":", ":", type = "ntlm"), write_disk(ecdpcfn, overwrite = TRUE))
# Read dataset
ecdpcdata = read_excel(ecdpcfn)
View(ecdpcdata)
runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
library(shiny); runApp('covid/coronaviz/mobileapp.R')
404989-386572
18417/7
runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
shiny::runApp('covid/coronaviz')
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.width = 10)
library(tidyverse)
library(lubridate)
library(sjPlot)
library(lme4)
library(knitr)
library(scales)
library(leaflet)
library(wesanderson)
dat <- read.csv("data/stemi_all.csv") %>%
mutate(Date = as.Date(Date, format = "%d/%m/%Y")) %>%
gather(hospital, count, -Date) %>%
mutate(day = yday(Date),
year = as.factor(year(Date))) %>%
mutate(covid = as.factor(ifelse(year==2019,"2019-Reference",ifelse(day<=59,"2020-PRECOVID","2020-COVID"))),
hospital = case_when(hospital == "James" ~ "A",
hospital == "Galway" ~ "B",
hospital == "Limerick" ~ "C",
hospital == "Waterford" ~ "D",
hospital == "Mater" ~ "E"))
#dat$covid <- factor(dat$covid, levels = levels(dat$covid)[c(1,3,2)])
oacs <- read.csv("data/other_acs.csv") %>%
mutate(Date = as.Date(Date, format = "%d/%m/%Y")) %>%
gather(hospital, count, -Date) %>%
mutate(day = yday(Date),
covid = as.factor(ifelse(day<=59,"2020-PRECOVID","2020-COVID")),
hospital = case_when(hospital == "James" ~ "A",
hospital == "Galway" ~ "B",
hospital == "Limerick" ~ "C",
hospital == "Waterford" ~ "D",
hospital == "Mater" ~ "E"))
#oacs$covid <- factor(oacs$covid, levels = levels(oacs$covid)[c(2,1)])
aacs <- dat %>%
filter(covid != "2019-Reference") %>%
select(-c(year)) %>%
rbind(oacs)
# case + death data (daily new)
corona <- read.csv("/Users/andrew/covid/coronaviz/data/corona_ireland.csv") %>%
mutate(Date = as.Date(date, format = "%d/%m/%Y")) %>%
filter(area !="north") %>%
group_by(Date) %>%
summarise(ncases = sum(ncase),
ndeaths = sum(ndeath))
# case, death, hospital, icu data (daily cumulative)
stats <- read.csv("/Users/andrew/covid/coronaviz/data/corona_stats.csv") %>%
mutate(Date = as.Date(date, format = "%d/%m/%Y"))
aacs %>%
group_by(Date) %>%
summarise(count = sum(count), covid = covid[1]) %>%
mutate(day = yday(Date),
year = as.factor(year(Date))) %>%
group_by(covid) %>%
mutate(Total_All_ACS = cumsum(count),
day = ifelse(day < 60, day, day-60)) %>%
ggplot(aes(x=day, y=Total_All_ACS, fill = covid)) + geom_col(position = "dodge") +
labs(x="Days from start of January (green) and March (red)", y = "Cumulative all ACS") + theme_bw() +
scale_fill_manual(values=wes_palette("Darjeeling1", n=2)) +
geom_vline(xintercept=12,linetype="dashed", color = "orange") +
geom_vline(xintercept=26,linetype="dashed", color = "red")+
scale_x_continuous(breaks = seq(0,60,15), limits = c(0,62)) +
theme(legend.position = "none",
axis.title.y = element_text(margin = margin(t = 0, r = 2, b = 0, l = 0)))
corona %>%
mutate(cols = factor(1)) %>%
ggplot(aes(x=Date, y=ncases,fill=cols)) + geom_col() +
geom_smooth(color="darkorange",se=FALSE) +
labs(y="Daily confirmed COVID-19 cases") + theme_bw() +
scale_y_continuous(limit=c(0,NA),oob=squish) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none") +
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("01/03/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y"))) +
scale_fill_manual(values=wes_palette("Darjeeling1", n=1))
read.csv("/Users/andrew/covid/coronaviz/data/corona_stats.csv") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y"),
Cases = c(NA,diff(Cases)),
Hospitalised = c(NA,diff(Hospitalised)),
ICU = c(NA,diff(ICU)),
Deaths = c(NA,diff(Deaths))) %>%
gather(type, count, Cases:Deaths, factor_key=TRUE) %>%
filter(type!="Cases") %>%
mutate(count = ifelse(count<0, 0, count),
type = case_when(type=="ICU" ~ "ICU admissions",
type=="Hospitalised" ~ "Hospital admissions",
type=="Deaths" ~ "Deaths")) %>%
ggplot(aes(x=date, y=count, color = type)) + geom_smooth(se=FALSE) +
scale_color_manual(values=wes_palette("Darjeeling1", n=3)) +
labs(y="New daily counts", x="Date") + theme_bw()+
theme(axis.text.x = element_text(angle=45, hjust = 1), legend.position = "none",
axis.title.y = element_text(margin = margin(t = 0, r = 12, b = 0, l = 0))) +
geom_vline(xintercept=as.Date("12/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "orange") +
geom_vline(xintercept=as.Date("26/03/2020",format="%d/%m/%Y"),linetype="dashed", color = "red")+
scale_x_date(date_breaks = "3 days",
limits = c(as.Date("01/03/2020",format="%d/%m/%Y"),
as.Date("30/04/2020",format="%d/%m/%Y")))
?prop.test
prop.test(x=c(0.54*102,0.37*64), n = c(102,64))
prop.test(x=c(0.5429*105,0.377*64), n = c(105,64))
prop.test(x=c(0.5429*105,0.377*128), n = c(105,128))
library(shiny)
library(shinydashboard)
library(shinythemes)
library(shinyjs)
library(readr)
library(leaflet)
library(leaflet.extras)
library(ggplot2)
library(dplyr)
library(plotly)
library(DT)
library(googleVis)
library(rvest)
library(httr)
library(readxl)
library(zoo)
library(tidyr)
library(wesanderson)
?facet_grid
?vars
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
length(seq(runif(0,0.1),runif(0.9,1),by=0.01)
)
)
length(seq(runif(0,0.1),runif(0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.01),runif(1,0.95,1),by=0.01))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.009))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.009))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.009))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.009))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.008))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.008))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.008))
length(seq(runif(1,0,0.1),runif(1,0.9,1),by=0.008))
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
