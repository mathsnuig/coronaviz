rownames(table0) <- c("Promoted","Not Promoted")
colnames(table0) <- c("Male","Female")
table0 <- as.table(table0)
table0
fisher.test(table0)
fisher.test(table0, alternative = "greater")
knitr::opts_chunk$set(echo = FALSE)
library(Stat2Data)
data(Leukemia)
modelA <- glm(Resp ~ Age, data = Leukemia, family = binomial(link = "logit"))
summary(modelA)
modelA <- glm(Resp ~ Age, data = Leukemia, family = binomial(link = "logit"))
summary(modelA)
exp(-0.04676)
library(tidyverse)
Leukemia <- Leukemia %>%
mutate(age_group = cut(Age, breaks = c(0,29,60,200), labels = c("<30", "30-60", ">60")))
table(Leukemia$Resp, Leukemia$age_group)
modelC <- glm(Resp ~ Temp, data = Leukemia, family = binomial(link = "logit"))
modelC <- glm(Resp ~ Temp, data = Leukemia, family = binomial(link = "logit"))
summary(modelC)
exp(-0.03884)
View(Leukemia)
boxplot(Leukemia$Temp)
quantile(Leukemia$Temp, probs = c(0.33,0.66))
modelC <- glm(Resp ~ Temp, data = Leukemia, family = binomial(link = "logit"))
summary(modelC)
exp(-0.03884)
Leukemia <- Leukemia %>%
mutate(temp_group = cut(Temp, breaks = c(0,990,1000,1100), labels = c("<990", "990-1000", ">1000")))
table(Leukemia$Resp, Leukemia$temp_group)
View(Leukemia)
names(Leukemia)
modelD <- glm(Resp ~ Age + Smear + Infil + Index + Blasts + Temp,
data = Leukemia, family = binomial(link = "logit"))
summary(modelD)
modelFULL <- glm(Resp ~ Age + Smear + Infil + Index + Blasts + Temp,
data = Leukemia, family = binomial(link = "logit"))
summary(modelFULL)
modelREDUCED <- glm(Resp ~ Age + Index + Temp,
data = Leukemia, family = binomial(link = "logit"))
summary(modelREDUCED)
modelFULL$deviance - modelREDUCED$deviance
modelREDUCED$deviance - modelFULL$deviance
pchisq(modelREDUCED$deviance - modelFULL$deviance, df = 3, lower-tail = FALSE)
pchisq(modelREDUCED$deviance - modelFULL$deviance, df = 3, lower.tail = FALSE)
modelREDUCED <- glm(Resp ~ Age + Index + Temp,
data = Leukemia, family = binomial(link = "logit"))
summary(modelREDUCED)
modelREDUCED$deviance - modelFULL$deviance
pchisq(modelREDUCED$deviance - modelFULL$deviance, df = 3, lower.tail = FALSE)
exp(-0.06231)
round(exp(-0.06231),2)
round(exp(-0.11162),2)
modelA <- glm(Resp ~ Age, data = Leukemia, family = binomial(link = "logit"))
summary(modelA)
exp(-0.04676)
library(tidyverse)
Leukemia <- Leukemia %>%
mutate(age_group = cut(Age, breaks = c(0,29,60,200), labels = c("<30", "30-60", ">60")))
table(Leukemia$Resp, Leukemia$age_group)
modelC <- glm(Resp ~ Temp, data = Leukemia, family = binomial(link = "logit"))
summary(modelC)
exp(-0.03884)
Leukemia <- Leukemia %>%
mutate(temp_group = cut(Temp, breaks = c(0,990,1000,1100), labels = c("<990", "990-1000", ">1000")))
table(Leukemia$Resp, Leukemia$temp_group)
modelC <- glm(Resp ~ Temp, data = Leukemia, family = binomial(link = "logit"))
summary(modelC)
exp(-0.03884)
Leukemia <- Leukemia %>%
mutate(temp_group = cut(Temp, breaks = c(0,985,995,1100), labels = c("<990", "990-1000", ">1000")))
table(Leukemia$Resp, Leukemia$temp_group)
summary(modelREDUCED)
pchisq(3.219, df = 3, lower.tail = FALSE)
library(readxl)
library(lattice)
library(splines)
library(robustbase)
library(lubridate)
library(httr)
#create the URL where the dataset is stored with automatic updates every day
#download the dataset from the ECDC website to a local temporary file
GET("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".csv")))
#read the Dataset sheet into "R". The dataset will be called "data".
coronavirus <- read.csv(tf,encoding="UTF-8-BOM")
coronanames <- data.frame("countriesAndTerritories"=c("United_States_of_America","Germany","France","Spain","Japan","South_Korea","Italy","Ireland","Australia","United_Kingdom","Switzerland","New_Zealand"),
country=c("USA","Germany","France","Spain","Japan","South Korea","Italy","Ireland","Australia","UK","Switzerland","New Zealand"),
popn=c(328.23,83.707,65.23,46.75,126.59,51.26,60.49,4.94,25.41,66.44,8.57,4.794))
coronavirus <- merge(coronavirus,coronanames)
coronavirus$day21jan <- as.integer(as.Date(coronavirus$dateRep, "%d/%m/%Y") - as.Date("2020-01-20"))
coronavirus <- coronavirus[coronavirus$day21jan>0,]
coronavirus$popncases <- coronavirus$cases/coronavirus$popn
coronavirus$popndeaths <- coronavirus$deaths/coronavirus$popn
coronavirus <- coronavirus[order(coronavirus$country,coronavirus$year,coronavirus$month,coronavirus$day),]
lastday <- max(coronavirus$day21jan)
print(by(coronavirus,coronavirus$country,function(x) {
return(summary(glmrob(cases~day21jan,family=poisson,data=x[x$day21jan>=lastday-7,])))
}))
print(xyplot(popncases~day21jan | country, type="p", scales=list(alternating=FALSE,y=list(log=TRUE,at=10^(-3:2),labels=10^(-3:2))),
xlab="Day after 20 January",
ylab="Daily New Cases per Million Popn",
panel=function(x, y, subscripts, ..., popn=popn[subscripts]) {
### panel.abline(h=ygrid, v=xgrid, col=gray(0.8))
panel.xyplot(x, y, ... )
#browser()
expy <- popn[subscripts]*10^(y)
glm1 <- glmrob(expy~ns(x,4),family="poisson",data=data.frame(x,expy))
preddata <- data.frame(x=seq(min(x),max(x),length.out=101))
pred1 <- exp(predict(glm1,newdata=preddata))/popn[subscripts][1]
theparams <- match.call()
panel.xyplot(preddata$x, log10(pred1), type="l", col.line=theparams$col.line)
panel.abline(h=-3,lty=3)
panel.abline(h=-2,lty=3)
panel.abline(h=-1,lty=3)
panel.abline(h=0,lty=3)
panel.abline(h=1,lty=3)
panel.abline(h=2,lty=3)
},# function
as.table=TRUE,
popn=coronavirus[coronavirus$day21jan>=30,]$popn,
data=coronavirus[coronavirus$day21jan>=30,]))
print(xyplot(popndeaths~day21jan | country, type="p", scales=list(alternating=FALSE,y=list(log=TRUE,at=10^(-3:2),labels=10^(-3:2))),
xlab="Day after 20 January",
ylab="Daily Deaths per Million Popn",
panel=function(x, y, subscripts, ..., popn=popn[subscripts]) {
### panel.abline(h=ygrid, v=xgrid, col=gray(0.8))
panel.xyplot(x, y, ... )
expy <- popn[subscripts]*10^(y)
glm1 <- glmrob(expy~ns(x,3),family="poisson",data=data.frame(x,expy))
preddata <- data.frame(x=seq(min(x),max(x),length.out=101))
pred1 <- exp(predict(glm1,newdata=preddata))/popn[subscripts][1]
theparams <- match.call()
panel.xyplot(preddata$x, log10(pred1), type="l", col.line=theparams$col.line)
panel.abline(h=-3,lty=3)
panel.abline(h=-2,lty=3)
panel.abline(h=-1,lty=3)
panel.abline(h=0,lty=3)
panel.abline(h=1,lty=3)
panel.abline(h=2,lty=3)
},# function
as.table=TRUE,
popn=coronavirus[coronavirus$day21jan>=30,]$popn,
data=coronavirus[coronavirus$day21jan>=30,]))
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
install.packages("CurveFit")
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
shiny::runApp('covid/coronaviz')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(leaflet)
library(DT)
rm(list=ls())
dat <- read.csv("data/corona_stats.csv")
diff(dat$Cases)
?diff
dat$new_cases <- diff(dat$Cases)
dat$new_cases <- c(NA,diff(dat$Cases))
dat <- read.csv("data/corona_stats.csv")
dat$new_cases <- c(NA,diff(dat$Cases))
dat$new_hosp <- c(NA,diff(dat$Hospitalised))
dat$new_icu <- c(NA,diff(dat$ICU))
dat$new_deaths <- c(NA,diff(dat$Deaths))
View(dat)
data_long <- gather(dat, type, new, new_cases:new_deaths, factor_key=TRUE)
View(data_long)
dat <- read.csv("data/corona_stats.csv")
dat$Cases <- c(NA,diff(dat$Cases))
dat$Hospitalised <- c(NA,diff(dat$Hospitalised))
dat$ICU <- c(NA,diff(dat$ICU))
dat$Deaths <- c(NA,diff(dat$Deaths))
data_long <- gather(dat, type, count, Cases:Deaths, factor_key=TRUE)
View(data_long)
dat <- gather(dat, type, count, Cases:Deaths, factor_key=TRUE)
dat <- read.csv("data/corona_stats.csv") %>% mutate(date = as.Date(date,format = "%d/%m/%Y"))
dat$Cases <- c(NA,diff(dat$Cases))
dat$Hospitalised <- c(NA,diff(dat$Hospitalised))
dat$ICU <- c(NA,diff(dat$ICU))
dat$Deaths <- c(NA,diff(dat$Deaths))
dat <- gather(dat, type, count, Cases:Deaths, factor_key=TRUE)
ggplot(dat, aes)
ggplot(dat, aes(x=date, y=count, color = type)) + geom_col()
dat %>% filter(type!="Cases") %>%
ggplot(aes(x=date, y=count, color = type)) + geom_line()
dat %>% filter(type!="Cases") %>%
ggplot(aes(x=date, y=count, color = type)) + geom_line() + geom_point()
dat %>% filter(type!="Cases") %>%
ggplot(aes(x=date, y=count, color = type)) + geom_line() + geom_point() + labs(y="New counts")
dat %>% filter(type!="Cases") %>%
ggplot(aes(x=date, y=count, color = type)) + geom_line() + geom_point() + labs(y="New daily counts")
library(cumstats)
library(pracma)
install.packages("cumstats")
library(cumstats)
library(pracma)
dat <- dat %>% mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
mutate(ncases = as.character(ncase),
ncases = ifelse(ncases == "< = 5","5",ncases),
ncases = as.numeric(ncases),
pop = case_when(county == "Carlow" ~ 24272,
county == "Cavan" ~ 76176,
county == "Clare" ~ 118817,
county == "Donegal" ~159192,
county == "Kildare" ~ 222504,
county == "Kilkenny" ~ 99232,
county == "Laois" ~ 84697,
county == "Leitrim" ~32044,
county == "Longford" ~ 40873,
county == "Louth" ~ 128884,
county == "Mayo" ~ 130507,
county == "Meath" ~ 195044,
county == "Monaghan" ~61386,
county == "Offaly" ~ 77961,
county == "Roscommon" ~ 64544,
county == "Sligo" ~ 65535,
county == "Tipperary" ~ 159553,
county == "Wexford" ~ 149722,
county == "Kerry" ~ 147707,
county == "Waterford" ~ 116176,
county == "Westmeath" ~ 88770,
county == "Wicklow" ~ 142425,
county == "Galway" ~ 258058,
county == "Limerick" ~ 194899,
county == "Cork" ~ 542868,
county == "Dublin" ~ 1347359),
long = case_when(county == "Carlow" ~ -6.9261098,
county == "Cavan" ~ -7.3605599,
county == "Clare" ~ -8.9811,
county == "Donegal" ~ -8.1041,
county == "Kildare" ~ -6.9144402,
county == "Kilkenny" ~ -7.2448,
county == "Laois" ~ -7.3323,
county == "Leitrim" ~ -8.0020,
county == "Longford" ~ -7.7933,
county == "Louth" ~ -6.4889,
county == "Mayo" ~ -9.4289,
county == "Meath" ~ -6.6564,
county == "Monaghan" ~ -6.9683,
county == "Offaly" ~ -7.7122,
county == "Roscommon" ~ -8.1891,
county == "Sligo" ~ -8.4761,
county == "Tipperary" ~ -8.1619,
county == "Wexford" ~ -6.4633,
county == "Kerry" ~ -9.5669,
county == "Waterford" ~ -7.1101,
county == "Westmeath" ~ -7.4653,
county == "Wicklow" ~ -6.0446,
county == "Galway" ~ -9.0568,
county == "Limerick" ~ -8.6267,
county == "Cork" ~ -8.4756,
county == "Dublin" ~ -6.2603),
lat = case_when(county == "Carlow" ~ 52.8408318,
county == "Cavan" ~ 53.9908295,
county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498),
province = case_when(county=="Carlow"|county=="Dublin"|
county=="Kildare"|county=="Kilkenny"|
county=="Laois"|county=="Longford"|
county=="Louth"|county=="Meath"|
county=="Offaly"|county=="Westmeath"|
county=="Wexford"|county=="Wicklow" ~ "Leinster",
county=="Clare"|county=="Cork"|
county=="Kerry"|county=="Limerick"|
county=="Tipperary"|county=="Waterford" ~ "Munster",
county=="Galway"|county=="Leitrim"|
county=="Mayo"|county=="Roscommon"|
county=="Sligo" ~ "Connacht",
county=="Donegal"|county=="Cavan"|
county=="Monaghan" ~ "Ulster (ROI)"))
dat <- read.csv("data/corona_county.csv") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y"),
ncases = as.character(ncase),
ncases = ifelse(ncases == "< = 5","5",ncases),
ncases = as.numeric(ncases),
pop = case_when(county == "Carlow" ~ 24272,
county == "Cavan" ~ 76176,
county == "Clare" ~ 118817,
county == "Donegal" ~159192,
county == "Kildare" ~ 222504,
county == "Kilkenny" ~ 99232,
county == "Laois" ~ 84697,
county == "Leitrim" ~32044,
county == "Longford" ~ 40873,
county == "Louth" ~ 128884,
county == "Mayo" ~ 130507,
county == "Meath" ~ 195044,
county == "Monaghan" ~61386,
county == "Offaly" ~ 77961,
county == "Roscommon" ~ 64544,
county == "Sligo" ~ 65535,
county == "Tipperary" ~ 159553,
county == "Wexford" ~ 149722,
county == "Kerry" ~ 147707,
county == "Waterford" ~ 116176,
county == "Westmeath" ~ 88770,
county == "Wicklow" ~ 142425,
county == "Galway" ~ 258058,
county == "Limerick" ~ 194899,
county == "Cork" ~ 542868,
county == "Dublin" ~ 1347359),
long = case_when(county == "Carlow" ~ -6.9261098,
county == "Cavan" ~ -7.3605599,
county == "Clare" ~ -8.9811,
county == "Donegal" ~ -8.1041,
county == "Kildare" ~ -6.9144402,
county == "Kilkenny" ~ -7.2448,
county == "Laois" ~ -7.3323,
county == "Leitrim" ~ -8.0020,
county == "Longford" ~ -7.7933,
county == "Louth" ~ -6.4889,
county == "Mayo" ~ -9.4289,
county == "Meath" ~ -6.6564,
county == "Monaghan" ~ -6.9683,
county == "Offaly" ~ -7.7122,
county == "Roscommon" ~ -8.1891,
county == "Sligo" ~ -8.4761,
county == "Tipperary" ~ -8.1619,
county == "Wexford" ~ -6.4633,
county == "Kerry" ~ -9.5669,
county == "Waterford" ~ -7.1101,
county == "Westmeath" ~ -7.4653,
county == "Wicklow" ~ -6.0446,
county == "Galway" ~ -9.0568,
county == "Limerick" ~ -8.6267,
county == "Cork" ~ -8.4756,
county == "Dublin" ~ -6.2603),
lat = case_when(county == "Carlow" ~ 52.8408318,
county == "Cavan" ~ 53.9908295,
county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498),
province = case_when(county=="Carlow"|county=="Dublin"|
county=="Kildare"|county=="Kilkenny"|
county=="Laois"|county=="Longford"|
county=="Louth"|county=="Meath"|
county=="Offaly"|county=="Westmeath"|
county=="Wexford"|county=="Wicklow" ~ "Leinster",
county=="Clare"|county=="Cork"|
county=="Kerry"|county=="Limerick"|
county=="Tipperary"|county=="Waterford" ~ "Munster",
county=="Galway"|county=="Leitrim"|
county=="Mayo"|county=="Roscommon"|
county=="Sligo" ~ "Connacht",
county=="Donegal"|county=="Cavan"|
county=="Monaghan" ~ "Ulster (ROI)"))
View(dat)
View(dat)
dat %>% group_by(county) %>% mutate(diff = diff(ncases))
dat %>% group_by(county) %>% mutate(diff = c(NA,diff(ncases)))
dat %>% group_by(county) %>% mutate(new = c(NA,diff(ncases))) %>%
ggplot(aes(x=date, y=new, color = province)) + geom_line()
dat %>% group_by(county) %>% mutate(new = c(NA,diff(ncases))) %>%
ggplot(aes(x=date, y=new, color = county)) + geom_line()
dat %>% group_by(county) %>% mutate(new = 1e5*c(NA,diff(ncases)/pop)) %>%
ggplot(aes(x=date, y=new, color = county)) + geom_line()
dat %>% group_by(county) %>% mutate(new = c(NA,diff(ncases)/pop)) %>%
ggplot(aes(x=date, y=new, color = county)) + geom_line()
dat %>% group_by(county) %>% mutate(new = c(NA,diff(ncases))) %>%
ggplot(aes(x=date, y=new, color = county)) + geom_line()
dat %>% group_by(county) %>% mutate(new = c(NA,diff(ncases)),
new = new/pop) %>%
ggplot(aes(x=date, y=new, color = county)) + geom_line()
dat %>% group_by(county) %>% mutate(new = c(NA,diff(ncases)),
new = 1e5*new/pop) %>%
ggplot(aes(x=date, y=new, color = county)) + geom_line()
?`cumstats-package`
?cummean
dat <- read.csv("data/corona_ireland.csv") %>%
filter(country=="ireland") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(date) %>%
summarise(ncases = sum(ncase), New_cases = sum(ncase), Date = min(date)) %>%
na.omit() %>%
mutate(ccases = cumsum(ncases), Total_cases= cumsum(ncases)) %>%
mutate(Growth = round2(((Total_cases/c(NA,Total_cases[1:(length(Total_cases)-1)]))-1)*100,0)) %>%
mutate(median = median(Growth,na.rm=TRUE))
dat <- read.csv("data/corona_ireland.csv") %>%
filter(country=="ireland") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(date) %>%
summarise(ncases = sum(ncase), New_cases = sum(ncase), Date = min(date)) %>%
na.omit() %>%
mutate(ccases = cumsum(ncases), Total_cases= cumsum(ncases)) %>%
mutate(Growth = round(((Total_cases/c(NA,Total_cases[1:(length(Total_cases)-1)]))-1)*100,0)) %>%
mutate(median = median(Growth,na.rm=TRUE))
View(dat)
?pracma
dat <- read.csv("data/corona_ireland.csv") %>%
filter(country=="ireland") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(date) %>%
summarise(ncases = sum(ncase), New_cases = sum(ncase), Date = min(date)) %>%
na.omit() %>%
mutate(ccases = cumsum(ncases), Total_cases= cumsum(ncases)) %>%
mutate(Growth = round(((Total_cases/c(NA,Total_cases[1:(length(Total_cases)-1)]))-1)*100,0)) %>%
mutate(median = median(Growth,na.rm=TRUE),
roll5 = rollmean(Growth,5))
??rollmean
dat <- read.csv("data/corona_ireland.csv") %>%
filter(country=="ireland") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(date) %>%
summarise(ncases = sum(ncase), New_cases = sum(ncase), Date = min(date)) %>%
na.omit() %>%
mutate(ccases = cumsum(ncases), Total_cases= cumsum(ncases)) %>%
mutate(Growth = round(((Total_cases/c(NA,Total_cases[1:(length(Total_cases)-1)]))-1)*100,0)) %>%
mutate(median = median(Growth,na.rm=TRUE),
roll5 = rollmean(Growth,5,na.pad=TRUE))
dat <- read.csv("data/corona_ireland.csv") %>%
filter(country=="ireland") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(date) %>%
summarise(ncases = sum(ncase), New_cases = sum(ncase), Date = min(date)) %>%
na.omit() %>%
mutate(ccases = cumsum(ncases), Total_cases= cumsum(ncases)) %>%
mutate(Growth = round(((Total_cases/c(NA,Total_cases[1:(length(Total_cases)-1)]))-1)*100,0)) %>%
mutate(median = median(Growth,na.rm=TRUE))
roll <- rollmean(dat$Growth, k=5)
library(zoo)
roll <- rollmean(dat$Growth, k=5)
roll
dat$Growth
roll <- rollmean(dat$Growth, k=5, na.pad = TRUE)
roll
roll <- rollmean(dat$Growth[2:50], k=5, na.pad = TRUE)
roll
roll <- rollmean(dat$Growth[2:50], k=5, na.pad = TRUE, align = "right")
roll
roll <- rollmean(dat$Growth, k=5, na.pad = TRUE, align = "right")
[2:50]
roll <- rollmean(dat$Growth[2:50], k=5, na.pad = TRUE, align = "right")
roll
dat <- read.csv("data/corona_ireland.csv") %>%
filter(country=="ireland") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(date) %>%
summarise(ncases = sum(ncase), New_cases = sum(ncase), Date = min(date)) %>%
na.omit() %>%
mutate(ccases = cumsum(ncases), Total_cases= cumsum(ncases)) %>%
mutate(Growth = round(((Total_cases/c(NA,Total_cases[1:(length(Total_cases)-1)]))-1)*100,0)) %>%
mutate(median = median(Growth,na.rm=TRUE)) %>%
mutate(roll = c(NA,rollmean(Growth[2:50], k=5, na.pad = TRUE, align = "right")))
View(dat)
dat <- read.csv("data/corona_ireland.csv") %>%
filter(country=="ireland") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
group_by(date) %>%
summarise(ncases = sum(ncase), New_cases = sum(ncase), Date = min(date)) %>%
na.omit() %>%
mutate(ccases = cumsum(ncases), Total_cases= cumsum(ncases)) %>%
mutate(Growth = round(((Total_cases/c(NA,Total_cases[1:(length(Total_cases)-1)]))-1)*100,0)) %>%
mutate(median = median(Growth,na.rm=TRUE)) %>%
mutate(roll = c(NA,rollmean(Growth[2:50], k=5, na.pad = TRUE, align = "right"))) %>%
filter(Total_cases > 100)
View(dat)
View(dat)
runApp('covid/coronaviz')
runApp('covid/coronaviz')
shiny::runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz')
runApp('covid/coronaviz/mobileapp.R')
