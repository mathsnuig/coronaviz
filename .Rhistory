col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_character())) %>%
mutate(date = as.Date(date),
country = as.factor(tolower(location)))
vax =       read_csv("https://covid.ourworldindata.org/data/owid-covid-data.csv",
col_types = list(col_character(),col_character(),col_character(),
col_date(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_character(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_character())) %>%
mutate(date = as.Date(date),
country = as.factor(tolower(location)))  %>%      filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
d = vax %>%
mutate(Weekly = c(rep(NA,7),diff(total_vaccinations, lag = 7)),
First_dose = c(NA,diff(people_vaccinated)),
Second_dose = c(NA,diff(people_fully_vaccinated))) %>%
filter(date > "2021-02-06") %>%
gather(type, count, First_dose:Second_dose, factor_key=TRUE)
View(d)
weeks_left = as.numeric(as.Date("2021-06-30") - last(vax$date))/7 # weeks left to end of June
weekly_doses = round((3e6 - last(vax$people_vaccinated))/weeks_left,0) # weekly vax to hit first dose target
g = d %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(d$Weekly), " vaccines given in the last 7 days",
'<br>',
weekly_doses, " per week needed to hit end of June 82% target",
'<br>')) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
ggplotly(g)
View(d)
d = vax %>%
mutate(Weekly = c(rep(NA,7),diff(total_vaccinations, lag = 7)),
Weekly_first = c(rep(NA,7),diff(people_vaccinated, lag = 7)),
Weekly_second = c(rep(NA,7),diff(people_fully_vaccinated, lag = 7)),
First_dose = c(NA,diff(people_vaccinated)),
Second_dose = c(NA,diff(people_fully_vaccinated))) %>%
filter(date > "2021-02-06") %>%
gather(type, count, First_dose:Second_dose, factor_key=TRUE)
g = d %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(d$Weekly_first), " vaccines given in the last 7 days",
'<br>',
weekly_doses, " per week needed to hit end of June 82% target",
'<br>')) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
ggplotly(g)
g = d %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(d$Weekly_first), " first doses in the last 7 days",
'<br>',
weekly_doses, " first doses needed for June target",
'<br>')) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
ggplotly(g)
g = d %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(d$Weekly_first), " first doses in the last 7 days",
'<br>',
weekly_doses, " weekly first doses needed for June target",
'<br>')) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
ggplotly(g)
g = d %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(d$Weekly_first), " first doses in the last 7 days",
'<br>',
weekly_doses, " weekly first doses needed for June target",
'<br>',
"     ")) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
ggplotly(g)
runApp()
runApp()
0.588*(63)
country=read_csv("http://opendata-geohive.hub.arcgis.com/datasets/d9be85b30d7748b5b7c09450b8aede63_0.csv") %>%
mutate(date = as.Date(TimeStamp),
ncases = ConfirmedCovidCases,
pop = PopulationCensus16,
province = case_when(CountyName=="Carlow"|CountyName=="Dublin"|
CountyName=="Kildare"|CountyName=="Kilkenny"|
CountyName=="Laois"|CountyName=="Longford"|
CountyName=="Louth"|CountyName=="Meath"|
CountyName=="Offaly"|CountyName=="Westmeath"|
CountyName=="Wexford"|CountyName=="Wicklow" ~ "Leinster",
CountyName=="Clare"|CountyName=="Cork"|
CountyName=="Kerry"|CountyName=="Limerick"|
CountyName=="Tipperary"|CountyName=="Waterford" ~ "Munster",
CountyName=="Galway"|CountyName=="Leitrim"|
CountyName=="Mayo"|CountyName=="Roscommon"|
CountyName=="Sligo" ~ "Connacht",
CountyName=="Donegal"|CountyName=="Cavan"|
CountyName=="Monaghan" ~ "Ulster (ROI)"),
Total_cases_per100k = 1e5*ncases/pop)
library(shiny)
library(shinydashboard)
library(shinythemes)
library(shinyjs)
library(readr)
library(leaflet)
library(leaflet.extras)
library(ggplot2)
library(gganimate)
library(gifski)
library(prettyunits)
library(dplyr)
library(plotly)
library(DT)
library(googleVis)
library(rvest)
library(httr)
library(readxl)
library(zoo)
library(tidyr)
library(RCurl)
library(wesanderson)
library(lubridate)
country = read_csv("https://covid.ourworldindata.org/data/owid-covid-data.csv",
col_types = list(col_character(),col_character(),col_character(),
col_date(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_character(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_character())) %>%
mutate(date = as.Date(date),
country = as.factor(tolower(location)))
dataCountry() %>%
v=country =
filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
dataCountry() %>%
v=country %>%
filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
dataCountry() %>%
country %>%
filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
dataCountry() %>%
country %>%
filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
country %>%
filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
v=  country %>%
filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
View(v)
View(v)
v[34,]
146047+ 328598
runApp()
shiny::runApp()
shiny::runApp()
runApp()
# Dates used in selections
newdata = getURL("https://opendata.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.geojson") %>%
jsonlite::fromJSON() %>%
purrr::pluck("features", "properties") %>%
mutate(date = as.Date(Date),
date2 = as.Date(StatisticsProfileDate))
runApp()
runApp('~/Documents/ee/car_plot')
library(shiny)
library(shinydashboard)
library(shinythemes)
library(shinyjs)
library(readr)
library(leaflet)
library(leaflet.extras)
library(ggplot2)
library(gganimate)
library(gifski)
library(prettyunits)
library(dplyr)
library(plotly)
library(DT)
library(googleVis)
library(rvest)
library(httr)
library(readxl)
library(zoo)
library(tidyr)
library(RCurl)
library(wesanderson)
library(lubridate)
country = read_csv("https://covid.ourworldindata.org/data/owid-covid-data.csv",
col_types = list(col_character(),col_character(),col_character(),
col_date(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_character(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_double(), col_double(),
col_double(), col_character())) %>%
mutate(date = as.Date(date),
country = as.factor(tolower(location)))
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations))
View(vax)
273701+ 667182
272676 + 663411
runApp()
country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)  %>%
arrange(date) %>%
mutate(rate = c(NA,diff(people_vaccinated)/as.numeric(diff(date)))) %>%
filter(date == max(date)) %>%
mutate(time = round((4922000 - people_vaccinated)/rate,0)) %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(First_dose = people_vaccinated,
Second_dose = people_fully_vaccinated) %>%
gather(type, count, First_dose:Second_dose,
factor_key=TRUE) %>%
ggplot(aes(x=date, y = count, fill = type)) + theme_bw() +
geom_col() +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))  +
labs(x="Date",y = "People vaccinated")
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)  %>%
arrange(date)
View(vax)
vax %>%
mutate(rate = c(NA,diff(people_vaccinated)/as.numeric(diff(date)))) %>%
filter(date == max(date)) %>%
mutate(time = round((4922000 - people_vaccinated)/rate,0)) %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(First_dose = people_vaccinated,
Second_dose = people_fully_vaccinated) %>%
gather(type, count, First_dose:Second_dose,
factor_key=TRUE) %>%
ggplot(aes(x=date, y = count, fill = type)) + theme_bw() +
geom_col() +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))  +
labs(x="Date",y = "People vaccinated")
vax %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(First_dose = people_vaccinated,
Second_dose = people_fully_vaccinated) %>%
gather(type, count, First_dose:Second_dose,
factor_key=TRUE) %>%
ggplot(aes(x=date, y = count, fill = type)) + theme_bw() +
geom_col() +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))  +
labs(x="Date",y = "People vaccinated")
vax %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(Weekly = c(rep(NA,7),diff(total_vaccinations, lag = 7)),
Weekly_first = c(rep(NA,7),diff(people_vaccinated, lag = 7)),
Weekly_second = c(rep(NA,7),diff(people_fully_vaccinated, lag = 7)),
First_dose = c(NA,diff(people_vaccinated)),
Second_dose = c(NA,diff(people_fully_vaccinated))) %>%
filter(date > "2021-02-06") %>%
gather(type, count, First_dose:Second_dose, factor_key=TRUE)
weeks_left = as.numeric(as.Date("2021-06-30") - last(vax$date))/7 # weeks left to end of June
weekly_doses = round((3e6 - last(vax$people_vaccinated))/weeks_left,0) # weekly vax to hit first dose target
vax %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(Weekly = c(rep(NA,7),diff(total_vaccinations, lag = 7)),
Weekly_first = c(rep(NA,7),diff(people_vaccinated, lag = 7)),
Weekly_second = c(rep(NA,7),diff(people_fully_vaccinated, lag = 7)),
First_dose = c(NA,diff(people_vaccinated)),
Second_dose = c(NA,diff(people_fully_vaccinated))) %>%
filter(date > "2021-02-06") %>%
gather(type, count, First_dose:Second_dose, factor_key=TRUE) %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(d$Weekly_first), " first doses in the last 7 days",
'<br>',
weekly_doses, " weekly first doses needed for June target",
'<br>',
"     ")) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
vax %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(Weekly = c(rep(NA,7),diff(total_vaccinations, lag = 7)),
Weekly_first = c(rep(NA,7),diff(people_vaccinated, lag = 7)),
Weekly_second = c(rep(NA,7),diff(people_fully_vaccinated, lag = 7)),
First_dose = c(NA,diff(people_vaccinated)),
Second_dose = c(NA,diff(people_fully_vaccinated))) %>%
filter(date > "2021-02-06") %>%
gather(type, count, First_dose:Second_dose, factor_key=TRUE) %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(vax$Weekly_first), " first doses in the last 7 days",
'<br>',
weekly_doses, " weekly first doses needed for June target",
'<br>',
"     ")) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
View(vax)
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)  %>%
mutate(date = ifelse(date == "2021-04-07", as.Date("2021-04-08"), date))
View(vax)
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)  %>%
mutate(date = ifelse(date == "2021-04-07", as.Date("2021-04-08"), as.Date(date)))
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)  %>%
mutate(date = ifelse(date == "2021-04-07", as.Date("2021-04-08"), as.Date(date, format = "%Y-%m-%d")))
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)
291879+687619
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411) %>%
mutate(date = ifelse(date == "2021-04-07", "2021-04-08", date, format = "%Y-%m-%d"))
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411) %>%
mutate(date = ifelse(date == "2021-04-07", "2021-04-08", date))
vax$date[vax$date=="2021-04-07"] = "2021-04-08"
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)
vax$date[vax$date=="2021-04-07"] = "2021-04-08"
vax %>%   add_row(date = as.Date("2021-04-07"), total_vaccinations = 979498,
people_fully_vaccinated = 291879, people_vaccinated = 687619)  %>%
arrange(date)
vax=  vax %>%   add_row(date = as.Date("2021-04-07"), total_vaccinations = 979498,
people_fully_vaccinated = 291879, people_vaccinated = 687619)  %>%
arrange(date)
weeks_left = as.numeric(as.Date("2021-06-30") - last(vax$date))/7 # weeks left to end of June
weekly_doses = round((3e6 - last(vax$people_vaccinated))/weeks_left,0) # weekly vax to hit first dose target
vax %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(Weekly = c(rep(NA,7),diff(total_vaccinations, lag = 7)),
Weekly_first = c(rep(NA,7),diff(people_vaccinated, lag = 7)),
Weekly_second = c(rep(NA,7),diff(people_fully_vaccinated, lag = 7)),
First_dose = c(NA,diff(people_vaccinated)),
Second_dose = c(NA,diff(people_fully_vaccinated))) %>%
filter(date > "2021-02-06") %>%
gather(type, count, First_dose:Second_dose, factor_key=TRUE) %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(vax$Weekly_first), " first doses in the last 7 days",
'<br>',
weekly_doses, " weekly first doses needed for June target",
'<br>',
"     ")) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
View(vax)
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)
weeks_left = as.numeric(as.Date("2021-06-30") - last(vax$date))/7 # weeks left to end of June
weekly_doses = round((3e6 - last(vax$people_vaccinated))/weeks_left,0) # weekly vax to hit first dose target
vax %>%
mutate(date = as.Date(date, format = "%d/%m/%Y"))  %>%
mutate(Weekly = c(rep(NA,7),diff(total_vaccinations, lag = 7)),
Weekly_first = c(rep(NA,7),diff(people_vaccinated, lag = 7)),
Weekly_second = c(rep(NA,7),diff(people_fully_vaccinated, lag = 7)),
First_dose = c(NA,diff(people_vaccinated)),
Second_dose = c(NA,diff(people_fully_vaccinated))) %>%
filter(date > "2021-02-06") %>%
gather(type, count, First_dose:Second_dose, factor_key=TRUE) %>%
ggplot(aes(x=date, y = count, fill = type)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
labs(x = "Date", y = "Daily total vaccinations",
title = paste0(last(vax$Weekly_first), " first doses in the last 7 days",
'<br>',
weekly_doses, " weekly first doses needed for June target",
'<br>',
"     ")) +
scale_fill_manual(values=wes_palette("GrandBudapest1", n=2))
vax = country %>% filter(country == "ireland" & date > "2021-01-01") %>%
select(date, total_vaccinations, people_fully_vaccinated, people_vaccinated) %>%
mutate(people_vaccinated = ifelse(is.na(people_vaccinated),total_vaccinations,people_vaccinated)) %>%
filter(!is.na(total_vaccinations)) %>%
add_row(date = as.Date("2021-03-03"), total_vaccinations = 474645,
people_fully_vaccinated = 146047, people_vaccinated = 328598) %>%
add_row(date = as.Date("2021-04-04"), total_vaccinations = 936087,
people_fully_vaccinated = 272676, people_vaccinated = 663411)
View(vax)
runApp()
runApp('mobileapp.R')
